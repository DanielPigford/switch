-- switch       - PushToDMZ
-- https://bitbucket.org/codeasaurus/switch
-- Description  - Template to generate a SQL Server one way script to push table data to DMZ.
--
    {{#each Items}}	
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spPushPM2Connect_{{Name}}]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[spPushPM2Connect_{{Name}}]
GO

	
CREATE PROCEDURE spPushPM2Connect_{{Name}}
AS
BEGIN
.
	--SELECT * FROM tblLastTableSyncDate;
	--SELECT * FROM [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
	DECLARE @LastSyncDate DATETIME
.
	--CREATE THE SYNC DATE ROW IF IT DOES NOT EXIST
    IF (0 = (SELECT COUNT(*) FROM tblLastTableSyncDate WHERE fldSourceTableName = '{{Name}}'))
    BEGIN
        INSERT INTO tblLastTableSyncDate (fldSourceTableName, fldLastSyncDate)
        VALUES ('{{Name}}', '1970-1-1')
    END;
.
.
	SELECT TOP 1 @LastSyncDate = COALESCE(fldLastSyncDate, '1970-1-1') 
    FROM tblLastTableSyncDate
    WHERE fldSourceTableName = '{{Name}}';
.
.
	--	   Source ==>	[{{Database.Name}}].[{{Schema}}].[{{Name}}]
    --Destination ==>	[DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
.
	-- INSERT DATA INTO [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] WHERE PRIMARY KEY VALUES DO NOT ALREADY EXIST.
    INSERT INTO [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
            ({{#each Columns}}{{xNotFirst ", "}}[{{Name}}]{{/each}})
            SELECT {{#each Columns}}{{xNotFirst ", "}}s.[{{Name}}]{{/each}}
                FROM [{{Database.Name}}].[{{Schema}}].[{{Name}}] s 
                    LEFT JOIN [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] d ON s.fldRowID = d.fldRowID
                WHERE s.fldLastUpdate > @LastSyncDate AND d.fldRowID IS NULL
.
.
	-- UPDATE DATA IN [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] WHERE PRIMARY KEY VALUES MATCH
    UPDATE [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
    SET
        {{#each Columns}}[{{Name}}] = s.[{{Name}}]{{xNotLast ", "}}
        {{/each}}
    FROM [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] d 
        INNER JOIN [{{Database.Name}}].[{{Schema}}].[{{Name}}] s
            ON d.fldRowID = s.fldRowID
    WHERE s.fldLastUpdate > @LastSyncDate
.
.
	-- DELETE DATA FROM [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] WHERE PRIMARY KEY VALUE DOES NOT EXIST IN SOURCE TABLE
    DELETE FROM [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
    WHERE fldRowID IN (
        SELECT d.fldRowID
        FROM [{{Database.Name}}].[{{Schema}}].[{{Name}}] s 
            RIGHT JOIN [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME] d ON s.fldRowID = d.fldRowID
        WHERE s.fldRowID IS NULL
    )
.
.
	--UPDATE LastSyncDate TO THE CURRENT DATE FOR {{Name}}
    UPDATE tblLastTableSyncDate
        SET fldLastSyncDate = GETDATE()
        WHERE fldSourceTableName = '{{Name}}';
    {{/each}}
.
.
	--SELECT * FROM tblLastTableSyncDate;
	--SELECT * FROM [DATEBASE_NAME].[SCHEMA].[DESTINATION_NAME]
END
GO