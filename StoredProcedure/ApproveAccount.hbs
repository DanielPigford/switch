-- switch       - Approve Account Procedure
-- https://github.com/DanielPigford/switch
-- Description  - Template to generate a SQL Server Approve Account procedure for EDA.AM
--

{{!===============================================================}}
{{! {                                                             }}
{{! }                                                             }}
{{!===============================================================}}
.
CREATE PROCEDURE spApproveAccount 
	-- Add the parameters for the stored procedure here
	@pAccountGuid nvarchar(40),
	@ApprovedById nvarchar(50),
	@ApprovedBy nvarchar(50)
AS
BEGIN
	DECLARE @Debug BIT = 0
	BEGIN TRANSACTION
		BEGIN TRY
		IF @Debug = 1
			BEGIN
				{{#each Items}}
				SELECT '[{{Name}}Pending]' AS 'TableName', * FROM [{{Name}}Pending] WHERE fldGUID = @pAccountGuid;
				{{/each}}
			END
.
		{{#each Items}}
		--Insert record into {{Name}} from {{Name}}Pending
		INSERT INTO [{{Name}}](
		{{#each Columns}}
		{{#xIfNotAny IsAutoKey "===" true}}
			[{{Name}}]{{#xNotLast}},{{/xNotLast}}{{#xLast}}){{/xLast}}
		{{/xIfNotAny}}
		{{/each}}
		SELECT 
		{{#each Columns}}
		{{#xIfNotAny IsAutoKey "===" true}}
			[{{Name}}]{{#xNotLast}},{{/xNotLast}}
		{{/xIfNotAny}}
		{{/each}}
		FROM [{{Name}}Pending]
		WHERE GUID_FIELD_GOES_HERE = @pAccountGuid;
.
		{{/each}}
		UPDATE [tblAMAccountSpecificSetup]
		SET [fldApprovedBy] = @ApprovedBy,
			[fldApprovedByID] = @ApprovedById,
			[fldApprovedDate] = GETDATE()
		WHERE fldGUID = @pAccountGuid;
.
		UPDATE [tblAMPracticeSpecificSetup]
		SET [fldApprovedBy] = @ApprovedBy,
			[fldApprovedByID] = @ApprovedById,
			[fldApprovedDate] = GETDATE()
		WHERE fldAccountGUID = @pAccountGuid;
		.
		{{#each Items}}
		--Delete record from {{Name}}Pending
		DELETE FROM [{{Name}}Pending]
		WHERE GUID_FIELD_GOES_HERE = @pAccountGuid;
.
		{{/each}}
		IF @Debug = 1
			BEGIN
				{{#each Items}}
				SELECT '[{{Name}}Pending]' AS 'TableName', * FROM [{{Name}}Pending] WHERE fldGUID = @pAccountGuid;
				{{/each}}
			END
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
.
	    DECLARE @ErrorMessage NVARCHAR(4000);  
		DECLARE @ErrorSeverity INT;  
		DECLARE @ErrorState INT;  
.
		SELECT   
			@ErrorMessage = ERROR_MESSAGE(),  
			@ErrorSeverity = ERROR_SEVERITY(),  
			@ErrorState = ERROR_STATE();  
.
		RAISERROR (@ErrorMessage, -- Message text.  
				   @ErrorSeverity, -- Severity.  
				   @ErrorState -- State.  
				   );  		
	END CATCH
.
	IF @Debug = 1
		ROLLBACK TRANSACTION
	ELSE
		COMMIT TRANSACTION
	END
GO
.